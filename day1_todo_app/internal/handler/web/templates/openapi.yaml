openapi: 3.0.0
info:
  title: Todo App API
  version: 1.0.0
  description: TodoアプリケーションのAPI

servers:
  - url: http://localhost:8080
    description: ローカル開発環境

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name

    Todo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [not_started, in_progress, done, pending, cancel]
        sort_order:
          type: integer
        is_archived:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - title
        - status

    TodoList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Todo'
        next_cursor:
          type: string
          nullable: true

    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: string

paths:
  /api/session:
    post:
      summary: セッション作成（ユーザー選択）
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  format: int64
              required:
                - user_id
      responses:
        '200':
          description: セッション作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: 現在のセッション情報取得
      responses:
        '200':
          description: セッション情報取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: セッションが存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/todos:
    get:
      summary: Todo一覧取得
      parameters:
        - name: cursor
          in: query
          schema:
            type: string
          description: カーソル（次のページ取得用）
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
          description: 取得件数
      responses:
        '200':
          description: Todo一覧取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
    post:
      summary: Todo新規作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                  enum: [not_started, in_progress, done, pending, cancel]
              required:
                - title
                - status
      responses:
        '201':
          description: Todo作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/todos/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    put:
      summary: Todo更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                  enum: [not_started, in_progress, done, pending, cancel]
      responses:
        '200':
          description: Todo更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Todoが存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Todoアーカイブ
      responses:
        '204':
          description: Todoアーカイブ成功
        '404':
          description: Todoが存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/todos/{id}/restore:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    put:
      summary: アーカイブされたTodoの復活
      responses:
        '200':
          description: Todo復活成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Todoが存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/todos/sort:
    put:
      summary: Todoの並び順一括更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                todo_ids:
                  type: array
                  items:
                    type: integer
                    format: int64
              required:
                - todo_ids
      responses:
        '204':
          description: 並び順更新成功
        '400':
          description: リクエストエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/todos/archived:
    get:
      summary: アーカイブされたTodo一覧取得
      parameters:
        - name: cursor
          in: query
          schema:
            type: string
          description: カーソル（次のページ取得用）
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
          description: 取得件数
      responses:
        '200':
          description: アーカイブされたTodo一覧取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'