/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/etl/run-sample/route";
exports.ids = ["app/api/etl/run-sample/route"];
exports.modules = {

/***/ "(rsc)/./app/_lib/etl.ts":
/*!*************************!*\
  !*** ./app/_lib/etl.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   runEtlPipeline: () => (/* binding */ runEtlPipeline)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! papaparse */ \"(rsc)/./node_modules/papaparse/papaparse.js\");\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(papaparse__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n\n// import type { PipelineRun } from '@prisma/client'; // Comment out for now\n\n\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n// --- Helper Functions ---\nasync function updatePipelineStatus(pipelineRunId, status, preview, errorMessage) {\n    const data = {\n        status\n    }; // Use Record<string, any> instead of Partial<PipelineRun>\n    if (preview) {\n        const existingRun = await prisma.pipelineRun.findUnique({\n            where: {\n                id: pipelineRunId\n            },\n            select: {\n                previewData: true\n            }\n        });\n        const existingPreview = existingRun?.previewData ? existingRun.previewData : [];\n        data.previewData = [\n            ...existingPreview,\n            preview\n        ];\n    }\n    if (errorMessage !== undefined) {\n        data.errorMessage = errorMessage;\n    }\n    await prisma.pipelineRun.update({\n        where: {\n            id: pipelineRunId\n        },\n        data\n    });\n}\n// Function to apply a single transformation step\nfunction applyTransformStep(data, step) {\n    console.log(`Applying transform: ${step.type}`);\n    switch(step.type){\n        case 'selectColumns':\n            return data.map((row)=>{\n                const newRow = {};\n                step.columns.forEach((col)=>{\n                    if (row.hasOwnProperty(col)) {\n                        newRow[col] = row[col];\n                    }\n                });\n                return newRow;\n            });\n        case 'toUpperCase':\n            return data.map((row)=>({\n                    ...row,\n                    [step.column]: String(row[step.column]).toUpperCase()\n                }));\n        case 'toLowerCase':\n            return data.map((row)=>({\n                    ...row,\n                    [step.column]: String(row[step.column]).toLowerCase()\n                }));\n        case 'addConstant':\n            return data.map((row)=>({\n                    ...row,\n                    [step.column]: Number(row[step.column]) + step.value\n                }));\n        case 'multiplyConstant':\n            return data.map((row)=>({\n                    ...row,\n                    [step.column]: Number(row[step.column]) * step.value\n                }));\n        case 'filter':\n            return data.filter((row)=>{\n                const val = row[step.column];\n                const compareVal = typeof val === 'number' ? Number(step.value) : String(step.value);\n                switch(step.operator){\n                    case '>':\n                        return val > compareVal;\n                    case '<':\n                        return val < compareVal;\n                    case '==':\n                        return String(val) == String(compareVal); // Use loose equality for flexibility\n                    case '!=':\n                        return String(val) != String(compareVal);\n                    default:\n                        return true;\n                }\n            });\n        default:\n            console.warn('Unknown transform step:', step);\n            return data;\n    }\n}\nfunction createPreview(stepName, data) {\n    const columns = data.length > 0 ? Object.keys(data[0]) : [];\n    const previewRows = data.slice(0, 5);\n    return {\n        step: stepName,\n        rowCount: data.length,\n        columns,\n        rows: previewRows\n    };\n}\n// --- Main ETL Function --- (Runs asynchronously)\nasync function runEtlPipeline(pipelineRunId, input, config// Array of transformation steps\n) {\n    let originalFilename = 'uploaded_file.csv'; // Default for string input\n    let csvContent;\n    try {\n        // --- 1. Extract --- (Parse CSV)\n        await updatePipelineStatus(pipelineRunId, 'extracting');\n        console.log(`[${pipelineRunId}] Extracting...`);\n        if (typeof input === 'object' && input.type === 'filepath') {\n            originalFilename = path__WEBPACK_IMPORTED_MODULE_3___default().basename(input.path);\n            csvContent = await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().readFile(input.path, 'utf-8');\n        } else if (typeof input === 'string') {\n            csvContent = input;\n        } else {\n            console.error(\"Invalid input type:\", input);\n            throw new Error('Invalid input type for ETL pipeline');\n        }\n        const parseResult = papaparse__WEBPACK_IMPORTED_MODULE_1___default().parse(csvContent, {\n            header: true,\n            skipEmptyLines: true,\n            dynamicTyping: true\n        });\n        if (parseResult.errors.length > 0) {\n            console.error(\"CSV Parse Errors:\", parseResult.errors);\n            throw new Error(`CSV Parsing failed: ${parseResult.errors[0].message}`);\n        }\n        let data = parseResult.data;\n        const extractPreview = createPreview('extract', data);\n        await updatePipelineStatus(pipelineRunId, 'transforming', extractPreview);\n        console.log(`[${pipelineRunId}] Extracted ${data.length} rows.`);\n        // --- 2. Transform --- (Apply steps sequentially)\n        for(let i = 0; i < config.length; i++){\n            const step = config[i];\n            console.log(`[${pipelineRunId}] Applying transform step ${i}: ${step.type}`);\n            data = applyTransformStep(data, step);\n            const transformPreview = createPreview(`transform_${i}`, data);\n            // Update status without changing overall status, just add preview\n            await updatePipelineStatus(pipelineRunId, 'transforming', transformPreview);\n            console.log(`[${pipelineRunId}] After step ${i}, ${data.length} rows remaining.`);\n        }\n        // --- 3. Load --- (Insert into DB)\n        await updatePipelineStatus(pipelineRunId, 'loading');\n        console.log(`[${pipelineRunId}] Loading ${data.length} rows into database...`);\n        // Prepare data for Prisma createMany\n        const dataToLoad = data.map((row)=>({\n                pipelineRunId: pipelineRunId,\n                originalFilename: originalFilename,\n                data: row\n            }));\n        // Use transaction for potentially large inserts if needed, but createMany is often sufficient\n        await prisma.processedData.createMany({\n            data: dataToLoad\n        });\n        const loadPreview = createPreview('load', data);\n        await updatePipelineStatus(pipelineRunId, 'completed', loadPreview);\n        console.log(`[${pipelineRunId}] Loading complete.`);\n    } catch (error) {\n        console.error(`[${pipelineRunId}] ETL Pipeline failed:`, error);\n        await updatePipelineStatus(pipelineRunId, 'failed', null, error.message || 'Unknown error');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RTVELEtBQUtvQyxNQUFNLENBQUMsZ0JBQWdCLENBQUM7UUFFcEY7UUFFQSxtQ0FBbUM7UUFDbkMsTUFBTXpDLHFCQUFxQkMsZUFBZTtRQUMxQ2lCLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRWxCLGNBQWMsVUFBVSxFQUFFSSxLQUFLb0MsTUFBTSxDQUFDLHNCQUFzQixDQUFDO1FBRTdFLHFDQUFxQztRQUNyQyxNQUFNMEIsYUFBYTlELEtBQUtnQixHQUFHLENBQUNDLENBQUFBLE1BQVE7Z0JBQ2hDckIsZUFBZUE7Z0JBQ2ZrRCxrQkFBa0JBO2dCQUNsQjlDLE1BQU1pQjtZQUNWO1FBRUEsOEZBQThGO1FBQzlGLE1BQU12QixPQUFPcUUsYUFBYSxDQUFDQyxVQUFVLENBQUM7WUFDbENoRSxNQUFNOEQ7UUFDVjtRQUVBLE1BQU1HLGNBQWMvQixjQUFjLFFBQVFsQztRQUMxQyxNQUFNTCxxQkFBcUJDLGVBQWUsYUFBYXFFO1FBQ3ZEcEQsUUFBUUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFbEIsY0FBYyxtQkFBbUIsQ0FBQztJQUVwRCxFQUFFLE9BQU9zRCxPQUFZO1FBQ25CckMsUUFBUXFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRXRELGNBQWMsc0JBQXNCLENBQUMsRUFBRXNEO1FBQ3pELE1BQU12RCxxQkFBcUJDLGVBQWUsVUFBVSxNQUFNc0QsTUFBTVEsT0FBTyxJQUFJO0lBQzdFO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9ub25hbWUvQ29yZGluZy8xMDBkYXlfY2hhbGxlbmdlX2JhY2tlbmQvZGF5MjlfZXRsX3BpcGVsaW5lL2FwcC9fbGliL2V0bC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQsIFByaXNtYSB9IGZyb20gJ0BwcmlzbWEvY2xpZW50Jztcbi8vIGltcG9ydCB0eXBlIHsgUGlwZWxpbmVSdW4gfSBmcm9tICdAcHJpc21hL2NsaWVudCc7IC8vIENvbW1lbnQgb3V0IGZvciBub3dcbmltcG9ydCBQYXBhIGZyb20gJ3BhcGFwYXJzZSc7XG5pbXBvcnQgZnMgZnJvbSAnZnMvcHJvbWlzZXMnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5cbmNvbnN0IHByaXNtYSA9IG5ldyBQcmlzbWFDbGllbnQoKTtcblxuLy8gLS0tIFR5cGVzIC0tLSBJbnRlcmZhY2VzIGZvciBUcmFuc2Zvcm1hdGlvbiBDb25maWcgLS0tIFRPRE86IFJlZmluZSBsYXRlciAtLS1cbmV4cG9ydCB0eXBlIFRyYW5zZm9ybVN0ZXAgPVxuICB8IHsgdHlwZTogJ3NlbGVjdENvbHVtbnMnOyBjb2x1bW5zOiBzdHJpbmdbXSB9XG4gIHwgeyB0eXBlOiAndG9VcHBlckNhc2UnOyBjb2x1bW46IHN0cmluZyB9XG4gIHwgeyB0eXBlOiAndG9Mb3dlckNhc2UnOyBjb2x1bW46IHN0cmluZyB9XG4gIHwgeyB0eXBlOiAnYWRkQ29uc3RhbnQnOyBjb2x1bW46IHN0cmluZzsgdmFsdWU6IG51bWJlciB9XG4gIHwgeyB0eXBlOiAnbXVsdGlwbHlDb25zdGFudCc7IGNvbHVtbjogc3RyaW5nOyB2YWx1ZTogbnVtYmVyIH1cbiAgfCB7IHR5cGU6ICdmaWx0ZXInOyBjb2x1bW46IHN0cmluZzsgb3BlcmF0b3I6ICc+JyB8ICc8JyB8ICc9PScgfCAnIT0nOyB2YWx1ZTogc3RyaW5nIHwgbnVtYmVyIH07XG5cbmV4cG9ydCB0eXBlIFRyYW5zZm9ybUNvbmZpZyA9IFRyYW5zZm9ybVN0ZXBbXTtcblxuZXhwb3J0IGludGVyZmFjZSBQcmV2aWV3RGF0YSB7XG4gIHN0ZXA6IHN0cmluZzsgLy8gJ2V4dHJhY3QnLCAndHJhbnNmb3JtXzAnLCAndHJhbnNmb3JtXzEnLCAuLi4sICdsb2FkJ1xuICByb3dDb3VudDogbnVtYmVyO1xuICBjb2x1bW5zOiBzdHJpbmdbXTtcbiAgcm93czogUmVjb3JkPHN0cmluZywgYW55PltdOyAvLyBQcmV2aWV3IHJvd3MgKGUuZy4sIGZpcnN0IDUpXG59XG5cbi8vIC0tLSBIZWxwZXIgRnVuY3Rpb25zIC0tLVxuXG5hc3luYyBmdW5jdGlvbiB1cGRhdGVQaXBlbGluZVN0YXR1cyhcbiAgcGlwZWxpbmVSdW5JZDogc3RyaW5nLFxuICBzdGF0dXM6IHN0cmluZyxcbiAgcHJldmlldz86IFByZXZpZXdEYXRhIHwgbnVsbCxcbiAgZXJyb3JNZXNzYWdlPzogc3RyaW5nIHwgbnVsbFxuKSB7XG4gIGNvbnN0IGRhdGE6IFJlY29yZDxzdHJpbmcsIGFueT4gPSB7IHN0YXR1cyB9OyAvLyBVc2UgUmVjb3JkPHN0cmluZywgYW55PiBpbnN0ZWFkIG9mIFBhcnRpYWw8UGlwZWxpbmVSdW4+XG4gIGlmIChwcmV2aWV3KSB7XG4gICAgY29uc3QgZXhpc3RpbmdSdW4gPSBhd2FpdCBwcmlzbWEucGlwZWxpbmVSdW4uZmluZFVuaXF1ZSh7IHdoZXJlOiB7IGlkOiBwaXBlbGluZVJ1bklkIH0sIHNlbGVjdDogeyBwcmV2aWV3RGF0YTogdHJ1ZSB9IH0pO1xuICAgIGNvbnN0IGV4aXN0aW5nUHJldmlldyA9IGV4aXN0aW5nUnVuPy5wcmV2aWV3RGF0YSA/IChleGlzdGluZ1J1bi5wcmV2aWV3RGF0YSBhcyBQcmlzbWEuSnNvblZhbHVlW10pIDogW107XG4gICAgZGF0YS5wcmV2aWV3RGF0YSA9IFsuLi5leGlzdGluZ1ByZXZpZXcsIHByZXZpZXcgYXMgUHJpc21hLkpzb25WYWx1ZV07XG4gIH1cbiAgaWYgKGVycm9yTWVzc2FnZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgZGF0YS5lcnJvck1lc3NhZ2UgPSBlcnJvck1lc3NhZ2U7XG4gIH1cbiAgYXdhaXQgcHJpc21hLnBpcGVsaW5lUnVuLnVwZGF0ZSh7XG4gICAgd2hlcmU6IHsgaWQ6IHBpcGVsaW5lUnVuSWQgfSxcbiAgICBkYXRhLFxuICB9KTtcbn1cblxuLy8gRnVuY3Rpb24gdG8gYXBwbHkgYSBzaW5nbGUgdHJhbnNmb3JtYXRpb24gc3RlcFxuZnVuY3Rpb24gYXBwbHlUcmFuc2Zvcm1TdGVwKGRhdGE6IFJlY29yZDxzdHJpbmcsIGFueT5bXSwgc3RlcDogVHJhbnNmb3JtU3RlcCk6IFJlY29yZDxzdHJpbmcsIGFueT5bXSB7XG4gIGNvbnNvbGUubG9nKGBBcHBseWluZyB0cmFuc2Zvcm06ICR7c3RlcC50eXBlfWApO1xuICBzd2l0Y2ggKHN0ZXAudHlwZSkge1xuICAgIGNhc2UgJ3NlbGVjdENvbHVtbnMnOlxuICAgICAgcmV0dXJuIGRhdGEubWFwKHJvdyA9PiB7XG4gICAgICAgIGNvbnN0IG5ld1JvdzogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9O1xuICAgICAgICBzdGVwLmNvbHVtbnMuZm9yRWFjaChjb2wgPT4ge1xuICAgICAgICAgIGlmIChyb3cuaGFzT3duUHJvcGVydHkoY29sKSkge1xuICAgICAgICAgICAgbmV3Um93W2NvbF0gPSByb3dbY29sXTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gbmV3Um93O1xuICAgICAgfSk7XG4gICAgY2FzZSAndG9VcHBlckNhc2UnOlxuICAgICAgcmV0dXJuIGRhdGEubWFwKHJvdyA9PiAoeyAuLi5yb3csIFtzdGVwLmNvbHVtbl06IFN0cmluZyhyb3dbc3RlcC5jb2x1bW5dKS50b1VwcGVyQ2FzZSgpIH0pKTtcbiAgICBjYXNlICd0b0xvd2VyQ2FzZSc6XG4gICAgICByZXR1cm4gZGF0YS5tYXAocm93ID0+ICh7IC4uLnJvdywgW3N0ZXAuY29sdW1uXTogU3RyaW5nKHJvd1tzdGVwLmNvbHVtbl0pLnRvTG93ZXJDYXNlKCkgfSkpO1xuICAgIGNhc2UgJ2FkZENvbnN0YW50JzpcbiAgICAgIHJldHVybiBkYXRhLm1hcChyb3cgPT4gKHsgLi4ucm93LCBbc3RlcC5jb2x1bW5dOiBOdW1iZXIocm93W3N0ZXAuY29sdW1uXSkgKyBzdGVwLnZhbHVlIH0pKTtcbiAgICBjYXNlICdtdWx0aXBseUNvbnN0YW50JzpcbiAgICAgIHJldHVybiBkYXRhLm1hcChyb3cgPT4gKHsgLi4ucm93LCBbc3RlcC5jb2x1bW5dOiBOdW1iZXIocm93W3N0ZXAuY29sdW1uXSkgKiBzdGVwLnZhbHVlIH0pKTtcbiAgICBjYXNlICdmaWx0ZXInOlxuICAgICAgcmV0dXJuIGRhdGEuZmlsdGVyKHJvdyA9PiB7XG4gICAgICAgIGNvbnN0IHZhbCA9IHJvd1tzdGVwLmNvbHVtbl07XG4gICAgICAgIGNvbnN0IGNvbXBhcmVWYWwgPSB0eXBlb2YgdmFsID09PSAnbnVtYmVyJyA/IE51bWJlcihzdGVwLnZhbHVlKSA6IFN0cmluZyhzdGVwLnZhbHVlKTtcbiAgICAgICAgc3dpdGNoIChzdGVwLm9wZXJhdG9yKSB7XG4gICAgICAgICAgY2FzZSAnPic6IHJldHVybiB2YWwgPiBjb21wYXJlVmFsO1xuICAgICAgICAgIGNhc2UgJzwnOiByZXR1cm4gdmFsIDwgY29tcGFyZVZhbDtcbiAgICAgICAgICBjYXNlICc9PSc6IHJldHVybiBTdHJpbmcodmFsKSA9PSBTdHJpbmcoY29tcGFyZVZhbCk7IC8vIFVzZSBsb29zZSBlcXVhbGl0eSBmb3IgZmxleGliaWxpdHlcbiAgICAgICAgICBjYXNlICchPSc6IHJldHVybiBTdHJpbmcodmFsKSAhPSBTdHJpbmcoY29tcGFyZVZhbCk7XG4gICAgICAgICAgZGVmYXVsdDogcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIGRlZmF1bHQ6XG4gICAgICBjb25zb2xlLndhcm4oJ1Vua25vd24gdHJhbnNmb3JtIHN0ZXA6Jywgc3RlcCk7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVQcmV2aWV3KHN0ZXBOYW1lOiBzdHJpbmcsIGRhdGE6IFJlY29yZDxzdHJpbmcsIGFueT5bXSk6IFByZXZpZXdEYXRhIHtcbiAgICBjb25zdCBjb2x1bW5zID0gZGF0YS5sZW5ndGggPiAwID8gT2JqZWN0LmtleXMoZGF0YVswXSkgOiBbXTtcbiAgICBjb25zdCBwcmV2aWV3Um93cyA9IGRhdGEuc2xpY2UoMCwgNSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3RlcDogc3RlcE5hbWUsXG4gICAgICAgIHJvd0NvdW50OiBkYXRhLmxlbmd0aCxcbiAgICAgICAgY29sdW1ucyxcbiAgICAgICAgcm93czogcHJldmlld1Jvd3MsXG4gICAgfTtcbn1cblxuLy8gLS0tIE1haW4gRVRMIEZ1bmN0aW9uIC0tLSAoUnVucyBhc3luY2hyb25vdXNseSlcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJ1bkV0bFBpcGVsaW5lKFxuICBwaXBlbGluZVJ1bklkOiBzdHJpbmcsXG4gIGlucHV0OiBzdHJpbmcgfCB7IHR5cGU6ICdmaWxlcGF0aCc7IHBhdGg6IHN0cmluZyB9LCAvLyBDU1YgY29udGVudCBhcyBzdHJpbmcgb3IgcGF0aCB0byBmaWxlXG4gIGNvbmZpZzogVHJhbnNmb3JtQ29uZmlnIC8vIEFycmF5IG9mIHRyYW5zZm9ybWF0aW9uIHN0ZXBzXG4pIHtcbiAgbGV0IG9yaWdpbmFsRmlsZW5hbWUgPSAndXBsb2FkZWRfZmlsZS5jc3YnOyAvLyBEZWZhdWx0IGZvciBzdHJpbmcgaW5wdXRcbiAgbGV0IGNzdkNvbnRlbnQ6IHN0cmluZztcblxuICB0cnkge1xuICAgIC8vIC0tLSAxLiBFeHRyYWN0IC0tLSAoUGFyc2UgQ1NWKVxuICAgIGF3YWl0IHVwZGF0ZVBpcGVsaW5lU3RhdHVzKHBpcGVsaW5lUnVuSWQsICdleHRyYWN0aW5nJyk7XG4gICAgY29uc29sZS5sb2coYFske3BpcGVsaW5lUnVuSWR9XSBFeHRyYWN0aW5nLi4uYCk7XG5cbiAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnb2JqZWN0JyAmJiBpbnB1dC50eXBlID09PSAnZmlsZXBhdGgnKSB7XG4gICAgICBvcmlnaW5hbEZpbGVuYW1lID0gcGF0aC5iYXNlbmFtZShpbnB1dC5wYXRoKTtcbiAgICAgIGNzdkNvbnRlbnQgPSBhd2FpdCBmcy5yZWFkRmlsZShpbnB1dC5wYXRoLCAndXRmLTgnKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNzdkNvbnRlbnQgPSBpbnB1dDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihcIkludmFsaWQgaW5wdXQgdHlwZTpcIiwgaW5wdXQpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGlucHV0IHR5cGUgZm9yIEVUTCBwaXBlbGluZScpO1xuICAgIH1cblxuICAgIGNvbnN0IHBhcnNlUmVzdWx0ID0gUGFwYS5wYXJzZTxSZWNvcmQ8c3RyaW5nLCBhbnk+Pihjc3ZDb250ZW50LCB7XG4gICAgICBoZWFkZXI6IHRydWUsIC8vIFVzZSBmaXJzdCByb3cgYXMgaGVhZGVyXG4gICAgICBza2lwRW1wdHlMaW5lczogdHJ1ZSxcbiAgICAgIGR5bmFtaWNUeXBpbmc6IHRydWUsIC8vIEF1dG9tYXRpY2FsbHkgY29udmVydCBudW1iZXJzL2Jvb2xlYW5zXG4gICAgfSk7XG5cbiAgICBpZiAocGFyc2VSZXN1bHQuZXJyb3JzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkNTViBQYXJzZSBFcnJvcnM6XCIsIHBhcnNlUmVzdWx0LmVycm9ycyk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ1NWIFBhcnNpbmcgZmFpbGVkOiAke3BhcnNlUmVzdWx0LmVycm9yc1swXS5tZXNzYWdlfWApO1xuICAgIH1cblxuICAgIGxldCBkYXRhID0gcGFyc2VSZXN1bHQuZGF0YTtcbiAgICBjb25zdCBleHRyYWN0UHJldmlldyA9IGNyZWF0ZVByZXZpZXcoJ2V4dHJhY3QnLCBkYXRhKTtcbiAgICBhd2FpdCB1cGRhdGVQaXBlbGluZVN0YXR1cyhwaXBlbGluZVJ1bklkLCAndHJhbnNmb3JtaW5nJywgZXh0cmFjdFByZXZpZXcpO1xuICAgIGNvbnNvbGUubG9nKGBbJHtwaXBlbGluZVJ1bklkfV0gRXh0cmFjdGVkICR7ZGF0YS5sZW5ndGh9IHJvd3MuYCk7XG5cbiAgICAvLyAtLS0gMi4gVHJhbnNmb3JtIC0tLSAoQXBwbHkgc3RlcHMgc2VxdWVudGlhbGx5KVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29uZmlnLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHN0ZXAgPSBjb25maWdbaV07XG4gICAgICAgIGNvbnNvbGUubG9nKGBbJHtwaXBlbGluZVJ1bklkfV0gQXBwbHlpbmcgdHJhbnNmb3JtIHN0ZXAgJHtpfTogJHtzdGVwLnR5cGV9YCk7XG4gICAgICAgIGRhdGEgPSBhcHBseVRyYW5zZm9ybVN0ZXAoZGF0YSwgc3RlcCk7XG4gICAgICAgIGNvbnN0IHRyYW5zZm9ybVByZXZpZXcgPSBjcmVhdGVQcmV2aWV3KGB0cmFuc2Zvcm1fJHtpfWAsIGRhdGEpO1xuICAgICAgICAvLyBVcGRhdGUgc3RhdHVzIHdpdGhvdXQgY2hhbmdpbmcgb3ZlcmFsbCBzdGF0dXMsIGp1c3QgYWRkIHByZXZpZXdcbiAgICAgICAgYXdhaXQgdXBkYXRlUGlwZWxpbmVTdGF0dXMocGlwZWxpbmVSdW5JZCwgJ3RyYW5zZm9ybWluZycsIHRyYW5zZm9ybVByZXZpZXcpO1xuICAgICAgICBjb25zb2xlLmxvZyhgWyR7cGlwZWxpbmVSdW5JZH1dIEFmdGVyIHN0ZXAgJHtpfSwgJHtkYXRhLmxlbmd0aH0gcm93cyByZW1haW5pbmcuYCk7XG5cbiAgICB9XG5cbiAgICAvLyAtLS0gMy4gTG9hZCAtLS0gKEluc2VydCBpbnRvIERCKVxuICAgIGF3YWl0IHVwZGF0ZVBpcGVsaW5lU3RhdHVzKHBpcGVsaW5lUnVuSWQsICdsb2FkaW5nJyk7XG4gICAgY29uc29sZS5sb2coYFske3BpcGVsaW5lUnVuSWR9XSBMb2FkaW5nICR7ZGF0YS5sZW5ndGh9IHJvd3MgaW50byBkYXRhYmFzZS4uLmApO1xuXG4gICAgLy8gUHJlcGFyZSBkYXRhIGZvciBQcmlzbWEgY3JlYXRlTWFueVxuICAgIGNvbnN0IGRhdGFUb0xvYWQgPSBkYXRhLm1hcChyb3cgPT4gKHtcbiAgICAgICAgcGlwZWxpbmVSdW5JZDogcGlwZWxpbmVSdW5JZCxcbiAgICAgICAgb3JpZ2luYWxGaWxlbmFtZTogb3JpZ2luYWxGaWxlbmFtZSxcbiAgICAgICAgZGF0YTogcm93IGFzIFByaXNtYS5JbnB1dEpzb25PYmplY3QsXG4gICAgfSkpO1xuXG4gICAgLy8gVXNlIHRyYW5zYWN0aW9uIGZvciBwb3RlbnRpYWxseSBsYXJnZSBpbnNlcnRzIGlmIG5lZWRlZCwgYnV0IGNyZWF0ZU1hbnkgaXMgb2Z0ZW4gc3VmZmljaWVudFxuICAgIGF3YWl0IHByaXNtYS5wcm9jZXNzZWREYXRhLmNyZWF0ZU1hbnkoe1xuICAgICAgICBkYXRhOiBkYXRhVG9Mb2FkLFxuICAgIH0pO1xuXG4gICAgY29uc3QgbG9hZFByZXZpZXcgPSBjcmVhdGVQcmV2aWV3KCdsb2FkJywgZGF0YSk7XG4gICAgYXdhaXQgdXBkYXRlUGlwZWxpbmVTdGF0dXMocGlwZWxpbmVSdW5JZCwgJ2NvbXBsZXRlZCcsIGxvYWRQcmV2aWV3KTtcbiAgICBjb25zb2xlLmxvZyhgWyR7cGlwZWxpbmVSdW5JZH1dIExvYWRpbmcgY29tcGxldGUuYCk7XG5cbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgIGNvbnNvbGUuZXJyb3IoYFske3BpcGVsaW5lUnVuSWR9XSBFVEwgUGlwZWxpbmUgZmFpbGVkOmAsIGVycm9yKTtcbiAgICBhd2FpdCB1cGRhdGVQaXBlbGluZVN0YXR1cyhwaXBlbGluZVJ1bklkLCAnZmFpbGVkJywgbnVsbCwgZXJyb3IubWVzc2FnZSB8fCAnVW5rbm93biBlcnJvcicpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiUGFwYSIsImZzIiwicGF0aCIsInByaXNtYSIsInVwZGF0ZVBpcGVsaW5lU3RhdHVzIiwicGlwZWxpbmVSdW5JZCIsInN0YXR1cyIsInByZXZpZXciLCJlcnJvck1lc3NhZ2UiLCJkYXRhIiwiZXhpc3RpbmdSdW4iLCJwaXBlbGluZVJ1biIsImZpbmRVbmlxdWUiLCJ3aGVyZSIsImlkIiwic2VsZWN0IiwicHJldmlld0RhdGEiLCJleGlzdGluZ1ByZXZpZXciLCJ1bmRlZmluZWQiLCJ1cGRhdGUiLCJhcHBseVRyYW5zZm9ybVN0ZXAiLCJzdGVwIiwiY29uc29sZSIsImxvZyIsInR5cGUiLCJtYXAiLCJyb3ciLCJuZXdSb3ciLCJjb2x1bW5zIiwiZm9yRWFjaCIsImNvbCIsImhhc093blByb3BlcnR5IiwiY29sdW1uIiwiU3RyaW5nIiwidG9VcHBlckNhc2UiLCJ0b0xvd2VyQ2FzZSIsIk51bWJlciIsInZhbHVlIiwiZmlsdGVyIiwidmFsIiwiY29tcGFyZVZhbCIsIm9wZXJhdG9yIiwid2FybiIsImNyZWF0ZVByZXZpZXciLCJzdGVwTmFtZSIsImxlbmd0aCIsIk9iamVjdCIsImtleXMiLCJwcmV2aWV3Um93cyIsInNsaWNlIiwicm93Q291bnQiLCJyb3dzIiwicnVuRXRsUGlwZWxpbmUiLCJpbnB1dCIsImNvbmZpZyIsIm9yaWdpbmFsRmlsZW5hbWUiLCJjc3ZDb250ZW50IiwiYmFzZW5hbWUiLCJyZWFkRmlsZSIsImVycm9yIiwiRXJyb3IiLCJwYXJzZVJlc3VsdCIsInBhcnNlIiwiaGVhZGVyIiwic2tpcEVtcHR5TGluZXMiLCJkeW5hbWljVHlwaW5nIiwiZXJyb3JzIiwibWVzc2FnZSIsImV4dHJhY3RQcmV2aWV3IiwiaSIsInRyYW5zZm9ybVByZXZpZXciLCJkYXRhVG9Mb2FkIiwicHJvY2Vzc2VkRGF0YSIsImNyZWF0ZU1hbnkiLCJsb2FkUHJldmlldyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/_lib/etl.ts\n");

/***/ }),

/***/ "(rsc)/./app/api/etl/run-sample/route.ts":
/*!*****************************************!*\
  !*** ./app/api/etl/run-sample/route.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/lib/index.mjs\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _lib_etl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../_lib/etl */ \"(rsc)/./app/_lib/etl.ts\");\n\n\n\n\n\n // Import the ETL function\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_1__.PrismaClient();\n// --- Define Transformation Config Schema (reuse from run endpoint) ---\n// TODO: Consider sharing this schema definition\nconst stepSchema = zod__WEBPACK_IMPORTED_MODULE_5__.z.union([\n    zod__WEBPACK_IMPORTED_MODULE_5__.z.object({\n        type: zod__WEBPACK_IMPORTED_MODULE_5__.z.literal('selectColumns'),\n        columns: zod__WEBPACK_IMPORTED_MODULE_5__.z.array(zod__WEBPACK_IMPORTED_MODULE_5__.z.string())\n    }),\n    zod__WEBPACK_IMPORTED_MODULE_5__.z.object({\n        type: zod__WEBPACK_IMPORTED_MODULE_5__.z.literal('toUpperCase'),\n        column: zod__WEBPACK_IMPORTED_MODULE_5__.z.string()\n    }),\n    zod__WEBPACK_IMPORTED_MODULE_5__.z.object({\n        type: zod__WEBPACK_IMPORTED_MODULE_5__.z.literal('toLowerCase'),\n        column: zod__WEBPACK_IMPORTED_MODULE_5__.z.string()\n    }),\n    zod__WEBPACK_IMPORTED_MODULE_5__.z.object({\n        type: zod__WEBPACK_IMPORTED_MODULE_5__.z.literal('addConstant'),\n        column: zod__WEBPACK_IMPORTED_MODULE_5__.z.string(),\n        value: zod__WEBPACK_IMPORTED_MODULE_5__.z.number()\n    }),\n    zod__WEBPACK_IMPORTED_MODULE_5__.z.object({\n        type: zod__WEBPACK_IMPORTED_MODULE_5__.z.literal('multiplyConstant'),\n        column: zod__WEBPACK_IMPORTED_MODULE_5__.z.string(),\n        value: zod__WEBPACK_IMPORTED_MODULE_5__.z.number()\n    }),\n    zod__WEBPACK_IMPORTED_MODULE_5__.z.object({\n        type: zod__WEBPACK_IMPORTED_MODULE_5__.z.literal('filter'),\n        column: zod__WEBPACK_IMPORTED_MODULE_5__.z.string(),\n        operator: zod__WEBPACK_IMPORTED_MODULE_5__.z.enum([\n            '>',\n            '<',\n            '==',\n            '!='\n        ]),\n        value: zod__WEBPACK_IMPORTED_MODULE_5__.z.union([\n            zod__WEBPACK_IMPORTED_MODULE_5__.z.string(),\n            zod__WEBPACK_IMPORTED_MODULE_5__.z.number()\n        ])\n    })\n]);\nconst transformConfigSchema = zod__WEBPACK_IMPORTED_MODULE_5__.z.array(stepSchema);\n// --- End of Schema Definition ---\nconst SAMPLE_CSV_PATH = path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), 'public', 'sample.csv');\nconst SAMPLE_FILENAME = 'sample.csv';\nasync function POST(request) {\n    try {\n        const configString = await request.text(); // Assuming config is sent as plain text JSON body\n        let config = []; // Default empty config array\n        if (configString) {\n            try {\n                const parsedConfig = JSON.parse(configString);\n                config = transformConfigSchema.parse(parsedConfig); // Validate config structure\n            } catch (e) {\n                console.error(\"Sample Config parsing/validation error:\", e);\n                const errorMessage = e instanceof zod__WEBPACK_IMPORTED_MODULE_5__.z.ZodError ? e.errors : 'Invalid config format';\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: 'Invalid config format',\n                    details: errorMessage\n                }, {\n                    status: 400\n                });\n            }\n        } else {\n            // If no config provided, use a default simple config for the sample run\n            console.log(\"No config provided for sample run, using default (no-op)\");\n            config = []; // Explicitly empty = no transformation\n        }\n        // Check if sample file exists\n        try {\n            await fs_promises__WEBPACK_IMPORTED_MODULE_2___default().access(SAMPLE_CSV_PATH);\n        } catch (error) {\n            console.error('Sample CSV file not found:', SAMPLE_CSV_PATH);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Sample CSV file not found on server'\n            }, {\n                status: 500\n            });\n        }\n        // Create PipelineRun entry\n        const pipelineRun = await prisma.pipelineRun.create({\n            data: {\n                filename: SAMPLE_FILENAME,\n                status: 'pending',\n                config: config,\n                previewData: []\n            }\n        });\n        // Trigger background ETL process using the file path\n        (0,_lib_etl__WEBPACK_IMPORTED_MODULE_4__.runEtlPipeline)(pipelineRun.id, {\n            type: 'filepath',\n            path: SAMPLE_CSV_PATH\n        }, config);\n        console.log(`[${pipelineRun.id}] Triggered sample ETL pipeline`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            pipelineRunId: pipelineRun.id\n        });\n    } catch (error) {\n        console.error('Error starting sample ETL pipeline:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to start sample ETL pipeline'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/etl/run-sample/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fetl%2Frun-sample%2Froute&page=%2Fapi%2Fetl%2Frun-sample%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fetl%2Frun-sample%2Froute.ts&appDir=%2FUsers%2Fnoname%2FCording%2F100day_challenge_backend%2Fday29_etl_pipeline%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnoname%2FCording%2F100day_challenge_backend%2Fday29_etl_pipeline&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fetl%2Frun-sample%2Froute&page=%2Fapi%2Fetl%2Frun-sample%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fetl%2Frun-sample%2Froute.ts&appDir=%2FUsers%2Fnoname%2FCording%2F100day_challenge_backend%2Fday29_etl_pipeline%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnoname%2FCording%2F100day_challenge_backend%2Fday29_etl_pipeline&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_noname_Cording_100day_challenge_backend_day29_etl_pipeline_app_api_etl_run_sample_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/etl/run-sample/route.ts */ \"(rsc)/./app/api/etl/run-sample/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/etl/run-sample/route\",\n        pathname: \"/api/etl/run-sample\",\n        filename: \"route\",\n        bundlePath: \"app/api/etl/run-sample/route\"\n    },\n    resolvedPagePath: \"/Users/noname/Cording/100day_challenge_backend/day29_etl_pipeline/app/api/etl/run-sample/route.ts\",\n    nextConfigOutput,\n    userland: _Users_noname_Cording_100day_challenge_backend_day29_etl_pipeline_app_api_etl_run_sample_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZldGwlMkZydW4tc2FtcGxlJTJGcm91dGUmcGFnZT0lMkZhcGklMkZldGwlMkZydW4tc2FtcGxlJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGZXRsJTJGcnVuLXNhbXBsZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm5vbmFtZSUyRkNvcmRpbmclMkYxMDBkYXlfY2hhbGxlbmdlX2JhY2tlbmQlMkZkYXkyOV9ldGxfcGlwZWxpbmUlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGbm9uYW1lJTJGQ29yZGluZyUyRjEwMGRheV9jaGFsbGVuZ2VfYmFja2VuZCUyRmRheTI5X2V0bF9waXBlbGluZSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDaUQ7QUFDOUg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9ub25hbWUvQ29yZGluZy8xMDBkYXlfY2hhbGxlbmdlX2JhY2tlbmQvZGF5MjlfZXRsX3BpcGVsaW5lL2FwcC9hcGkvZXRsL3J1bi1zYW1wbGUvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2V0bC9ydW4tc2FtcGxlL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZXRsL3J1bi1zYW1wbGVcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2V0bC9ydW4tc2FtcGxlL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL25vbmFtZS9Db3JkaW5nLzEwMGRheV9jaGFsbGVuZ2VfYmFja2VuZC9kYXkyOV9ldGxfcGlwZWxpbmUvYXBwL2FwaS9ldGwvcnVuLXNhbXBsZS9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fetl%2Frun-sample%2Froute&page=%2Fapi%2Fetl%2Frun-sample%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fetl%2Frun-sample%2Froute.ts&appDir=%2FUsers%2Fnoname%2FCording%2F100day_challenge_backend%2Fday29_etl_pipeline%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnoname%2FCording%2F100day_challenge_backend%2Fday29_etl_pipeline&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/zod","vendor-chunks/papaparse"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fetl%2Frun-sample%2Froute&page=%2Fapi%2Fetl%2Frun-sample%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fetl%2Frun-sample%2Froute.ts&appDir=%2FUsers%2Fnoname%2FCording%2F100day_challenge_backend%2Fday29_etl_pipeline%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnoname%2FCording%2F100day_challenge_backend%2Fday29_etl_pipeline&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();