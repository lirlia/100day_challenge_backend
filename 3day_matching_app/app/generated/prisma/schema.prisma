// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  name            String
  age             Int
  gender          String
  bio             String?
  profileImageUrl String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  swipes          Swipe[]  @relation("UserSwipes")
  swiped          Swipe[]  @relation("SwipedUser")
  matches1        Match[]  @relation("User1Matches")
  matches2        Match[]  @relation("User2Matches")
}

model Swipe {
  id           Int      @id @default(autoincrement())
  swiperUserId Int
  swipedUserId Int
  action       String
  createdAt    DateTime @default(now())
  swiperUser   User     @relation("UserSwipes", fields: [swiperUserId], references: [id])
  swipedUser   User     @relation("SwipedUser", fields: [swipedUserId], references: [id])

  @@unique([swiperUserId, swipedUserId])
}

model Match {
  id        Int      @id @default(autoincrement())
  user1Id   Int
  user2Id   Int
  createdAt DateTime @default(now())
  user1     User     @relation("User1Matches", fields: [user1Id], references: [id])
  user2     User     @relation("User2Matches", fields: [user2Id], references: [id])

  @@unique([user1Id, user2Id])
}
